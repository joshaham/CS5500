package audio;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class AudioHeader {
	static boolean DEBUG=false;
	String fileName;
	String format;
	double sampleRate;
	int bitesPerSecond;
	int numChannels;
	int audioLength;
	
	
	private AudioHeader(String fileName,String format,int nc,int sampleRate,int bps,int audioLength){
		this.fileName=fileName;
		this.format=format;
		this.numChannels=nc;
		this.sampleRate=sampleRate;
		this.bitesPerSecond=bps;
		this.audioLength=audioLength;
		
	}
	public static AudioHeader getInstance(){
		AudioHeader instance = new AudioHeader();
		
		return instance;
	}
	
	// check audio file headline format
	public static AudioHeader checkCDSpecs(String fileName,byte[] bytes,int datasize) {
		String format="";
		int nc=0;
		int sampleRate;
		int bps;
		ByteBuffer byteBuffer = ByteBuffer.wrap(bytes);
		byteBuffer.order(ByteOrder.LITTLE_ENDIAN);
		//Check format = wave
		if (byteBuffer.get(8) != 87 || byteBuffer.get(9) != 65 ||
			bytes[10] != 86 || bytes[11] != 69) {
			if (DEBUG) { System.err.println("ERROR: NOT Wave Format"); }
			return -1;		
		}
		format="wav";
		//Check audio format = PCM
		if (byteBuffer.get(20) != 1 || byteBuffer.get(21) != 0) {
			if (DEBUG) { System.err.println("ERROR: NOT PCM"); }
			return -1;
		}
		//Check channels = stereo or Mono
		if (byteBuffer.get(22) == 2 && byteBuffer.get(23) == 0) {
			nc=2;
		}else if(byteBuffer.get(22)==1 && byteBuffer.get(23)==0){
			nc=1;
		}else{
			if(DEBUG){System.err.println("ERROR: Incorrect num of channels");}
			return -1;
		}
		//Check sample rate is 44.1 kHz
		sampleRate=byteBuffer.getInt(24);
		if(sampleRate!=11025 && sampleRate!=22050 && sampleRate!=44100 && sampleRate!=48000){
			if(DEBUG){System.err.println("ERROR: Incorrect sample rate "+sampleRate);}
			return -1;
		}
		//check BitsPerSample is 16
		bps=byteBuffer.getShort(34);
		if (bps != 16 && bps != 8) {
			if (DEBUG) {System.out.println("ERROR: Incorrect bites per sample "+ bps);}
				return -1;
		}
		//check file size
		int subChunk2Size=byteBuffer.getInt(40);
		if(subChunk2Size!=datasize){
			if(DEBUG){System.out.println("Audio File data incomplete: "+
				subChunk2Size +" vs "+datasize);};
			return -1;
		}
		return new AudioHeader();
	}
}
