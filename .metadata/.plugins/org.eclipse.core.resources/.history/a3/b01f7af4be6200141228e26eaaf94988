package audio;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class AudioHeader {
	static boolean DEBUG=false;
	String fileName;
	String format;
	double sampleRate;
	int bitesPerSecond;
	int numChannels;
	int audioLength;
	
	
	private AudioHeader(){
		
	}
	public static AudioHeader getInstance(){
		AudioHeader instance = new AudioHeader();
		
		return instance;
	}
	
	// check audio file headline format
		int checkCDSpecs(byte[] bytes,int datasize) {
			String format="";
			int nc=0;
			ByteBuffer byteBuffer = ByteBuffer.wrap(bytes);
			byteBuffer.order(ByteOrder.LITTLE_ENDIAN);
			//Check format = wave
			if (byteBuffer.get(8) != 87 || byteBuffer.get(9) != 65 ||
				bytes[10] != 86 || bytes[11] != 69) {
					if (DEBUG) { System.err.println("ERROR: NOT Wave Format"); }
					return -1;
					
			}
			format="wav";
			//Check audio format = PCM
			if (byteBuffer.get(20) != 1 || byteBuffer.get(21) != 0) {
				if (DEBUG) { System.err.println("ERROR: NOT PCM"); }
				return -1;
			}
			//Check channels = stereo or Mono
			if (byteBuffer.get(22) == 2 && byteBuffer.get(23) == 0) {
				nc[0]=2;
			}else if(byteBuffer.get(22)==1 && byteBuffer.get(23)==0){
				nc[0]=1;
			}else{
				if(DEBUG){System.err.println("ERROR: Incorrect num of channels");}
				return -1;
			}
			//Check sample rate is 44.1 kHz
			int sr=byteBuffer.getInt(24);
			if(sr!=11025 && sr!=22050 && sr!=44100 && sr!=48000){
				if(DEBUG){System.err.println("ERROR: Incorrect sample rate "+sr);}
				return -1;
			}
			sampleRate[0]=sr;
			//check BitsPerSample is 16
			int t=byteBuffer.getShort(34);
			if (t != 16 && t != 8) {
				if (DEBUG) {System.out.println("ERROR: Incorrect bites per sample "+ t);}
				return -1;
			}
			bps[0]=t;
			//check file size
			int subChunk2Size=byteBuffer.getInt(40);
			if(subChunk2Size!=datasize){
				if(DEBUG){System.out.println("Audio File data incomplete: "+
					subChunk2Size +" vs "+datasize);};
				return -1;
			}
			return 0;
	}
}
